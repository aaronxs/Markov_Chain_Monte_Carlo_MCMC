# Question 7
r7a <- 1/20

# inverse of cdf of pareto(r,1)
q_inv_fn7 <- function(y, r){1/(1-y)^(1/r)}
# var fact function
vf <- function(x) { 2 * sum(acf(x, plot=FALSE)$acf) - 1 }
# number of iterations
M7 <- 10^5
# number of burn-ins
B7 <- 10^4
# number of independet runs
n7 <- 200
# list of estimates from runs
Ilist7a <- numeric(n7)
seVF7a <- numeric(n7)

for(i in 1:n7){
  # list of samples
  xlist7a <- numeric(M7)
  # initial value
  X <- q_inv_fn7(runif(1, min=0, max=1), r7a)
  # list of proposed values
  ylist7a <- q_inv_fn7(runif(M7, min=0, max=1), r7a)
  # list of uniform values
  ulist7a = runif(M7, min=0, max=1);
  for (j in 1:M7) {
    Y <- ylist7a[j]
    U <- ulist7a[j]
    ratio = (X/Y)^(-r7a - 1 + 6);
    if (U < ratio) {
      X = Y;
      xlist7a[j] <- X
    }
  }
  Ilist7a[i] <- mean(xlist7a[(B7+1):M7])
  seVF7a[i] <- sd(xlist7a[(B7+1):M7])*sqrt(vf(xlist7a[(B7+1):M7]))/sqrt(M7 - B7)
  print(i)
}
# estimate and se of the runs
IInd7a <- mean(Ilist7a)
seInd7a <- sd(Ilist7a)/sqrt(n7)

# initial value generated from inverse of cdf of pi
X <- q_inv_fn7(runif(1, min=0, max=1), 5)
xlist7a1 <- numeric(M7)
ylist7a <- q_inv_fn7(runif(M7, min=0, max=1), r7a)
ulist7a = runif(M7, min=0, max=1);
for (j in 1:M7) {
  Y <- ylist7a[j]
  U <- ulist7a[j]
  ratio = (X/Y)^(-r7a - 1 + 6);
  if (U < ratio) {
    X = Y;
    xlist7a1[j] <- X
  }
}
# estimate and se
I7a <- mean(xlist7a1[(B7+1):M7])
seVF7a <- sd(xlist7a1[(B7+1):M7])/sqrt(M7-B7)*sqrt(vf(xlist7a1[(B7+1):M7]))

